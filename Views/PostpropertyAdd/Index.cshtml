@model Tasken2.Models.Property;

@{
    ViewBag.Title = "Post Ad";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    body {
        background-color: rgba(0, 0, 0, 0.4);
        color: white;
        font-family: Arial, sans-serif;
    }

    .container {
        background-color: rgba(0, 0, 0, 0.8);
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        margin-top: 50px;
    }

    .form-label {
        color: #ffffff;
    }

    .form-control, .form-select {
        background-color: #333;
        color: white;
        border: 1px solid #555;
    }

        .form-control::placeholder, .form-select::placeholder {
            color: #aaa;
        }

        .form-control:focus, .form-select:focus {
            border-color: #87CEEB;
            box-shadow: 0 0 5px rgba(135, 206, 235, 0.5);
        }

    .btn-primary {
        background-color: #444;
        border: none;
        color: white;
        padding: 10px 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        cursor: pointer;
        border-radius: 8px;
    }

    /* .btn-primary:hover {
                background-color: #87CEEB;
            } */

    .text-danger {
        color: #ff6b6b;
    }

    fieldset {
        width: 60%;
        margin: auto;
        border: none;
    }

    /* legend {
            color: #87CEEB;
            font-size: 1.5em;
        } */

    /* .editor-label {
            margin-top: 10px;
            color: #87CEEB;
            font-weight: bold;
        } */

    .editor-field {
        margin-bottom: 10px;
    }

    input[type="file"] {
        margin-bottom: 10px;
    }

    h2 {
        margin-bottom: 20px;
        color: #87CEEB;
    }
</style>
<center>
    <h2>New post </h2>
    <form asp-controller="PostpropertyAdd" asp-action="Index" enctype="multipart/form-data" method="post">
    
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Post</legend>

            <div class="editor-label">
                @Html.LabelFor(model => model.propPrice, "Price")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.propPrice, new { htmlAttributes = new { @class = "form-control" } })
                <div class="text-danger">
                    @Html.ValidationMessageFor(model => model.propPrice)
                </div>
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.propArea, "Area by meter")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.propArea, new { htmlAttributes = new { @class = "form-control" } })
                <div class="text-danger">
                    @Html.ValidationMessageFor(model => model.propArea)
                </div>
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.probNumberOfRooms, "Number of Rooms")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.probNumberOfRooms, new { htmlAttributes = new { @class = "form-control" } })
                <div class="text-danger">
                    @Html.ValidationMessageFor(model => model.probNumberOfRooms)
                </div>
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.propRegion, "Region")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.propRegion, new { htmlAttributes = new { @class = "form-control" } })
                <div class="text-danger">
                    @Html.ValidationMessageFor(model => model.propRegion)
                </div>
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.propStreet, "Street")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.propStreet, new { htmlAttributes = new { @class = "form-control" } })
                <div class="text-danger">
                    @Html.ValidationMessageFor(model => model.propStreet)
                </div>
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.propFloorNumber, "Floor Number")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.propFloorNumber, new { htmlAttributes = new { @class = "form-control" } })
                <div class="text-danger">
                    @Html.ValidationMessageFor(model => model.propFloorNumber)
                </div>
            </div>

            <div class="editor-label">
                @Html.Label("Area")
            </div>
            <div class="editor-field">
                @Html.DropDownList("AreaId", (IEnumerable<SelectListItem>)ViewBag.Arealist, "Select Area", new { @class = "form-select" })
            </div>

            <div class="editor-label">
                @Html.Label("Images")
            </div>

            <div class="editor-field">
                <input type="file" name ="FileUpload1" class="form-control" /><br />
                <input type="file" name ="FileUpload2" class="form-control" /><br />
                <input type="file" name ="FileUpload3" class="form-control" /><br />
                <input type="file" name ="FileUpload4" class="form-control" /><br />
                <input type="file" name ="FileUpload5" class="form-control" /><br />
            </div>

            <p>
                <input type="submit" value="Create" class="btn btn-primary" />
            </p>
        </fieldset>
    
    </form>

    <div>
        <a href="/UserAccount/Index" class="btn btn-primary"> Back </a>
    </div>
</center>
